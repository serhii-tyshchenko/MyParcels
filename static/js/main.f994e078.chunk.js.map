{"version":3,"sources":["services/api/novaposhta.ts","services/db/ls.js","store/action-types.js","store/reducers/_parcels.js","store/reducers/_settings.js","store/reducers/_api.js","store/reducers/index.js","store/index.js","reportWebVitals.ts","constants/translations.ts","contexts/localization.jsx","store/action-creators.js","store/actions/_parcels.js","store/actions/_settings.js","utils/myClassnames/index.js","modules/ui/UICheckbox/UICheckbox.jsx","modules/ui/UIIconButton/UIIconButton.tsx","modules/ui/UIInput/UIInput.jsx","modules/ui/UISelect/UISelect.jsx","modules/ui/UIModal/UIModal.jsx","modules/parcels/AddParcelForm/AddParcelForm.jsx","modules/parcels/ParcelList/ParcelListItem/ParcelListItem.jsx","modules/parcels/ParcelList/ParcelList.jsx","modules/ui/UIDropdown/UIDropdown.jsx","modules/settings/ThemeToggler/ThemeToggler.jsx","constants/languages.ts","modules/settings/LanguageSelector/LanguageSelector.jsx","modules/layouts/Header/Header.tsx","modules/layouts/Main/Main.tsx","modules/layouts/Footer/Footer.tsx","modules/layouts/BaseLayout.tsx","modules/layouts/ErrorBoundary/ErrorBoundary.jsx","pages/Home/Home.tsx","App.jsx","index.jsx"],"names":["constructor","apiKey","baseUrl","getParcelInfo","parcelNumber","receiverPhone","fetch","this","method","headers","body","JSON","stringify","modelName","calledMethod","methodProperties","Documents","DocumentNumber","Phone","then","response","json","data","keyName","process","loadState","serializedState","localStorage","getItem","parse","err","saveState","state","setItem","console","log","clearState","removeItem","ADD_PARCEL","UPDATE_PARCEL","REMOVE_PARCEL","API_REQUEST_STARTED","API_REQUEST_ENDED","UPDATE_SETTINGS","initialState","language","theme","error","isLoading","rootReducer","combineReducers","parcels","action","type","payload","map","item","id","filter","settings","api","persistedState","ls","composeTools","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","subscribe","getState","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","translations","en","SIGN_IN","TRACK_PARCEL","ENTER_TRACKING_NUMBER","ARCHIVE_PARCEL","UNARCHIVE_PARCEL","CHECK_PARCEL_STATUS","NO_PARCELS","SHOW_ARCHIVED","ua","ru","Localization","createContext","displayName","LocalizationProvider","children","useSelector","Provider","value","actionApiRequestStarted","actionApiRequestEnded","formatAPIResponse","number","Number","citySender","CitySender","cityRecipient","CityRecipient","status","Status","scheduledDeliveryDate","ScheduledDeliveryDate","dateCreated","DateCreated","weight","DocumentWeight","statusCode","StatusCode","warehouseRecipient","WarehouseRecipientNumber","toString","deliveryCost","DocumentCost","createNewParcel","uuidv4","title","isArchived","isParcelNotFound","addParcel","dispatch","alert","actionAddParcel","catch","finally","checkParcelStatus","actionCheckParcelStatus","updateParcel","actionUpdateParcel","removeParcel","actionRemoveParcel","updateSettings","actionsConfig","string","arg","object","Object","keys","key","join","trim","array","typesConfig","Array","isArray","myClassnames","args","argType","find","mapConfig","NAME_SPACE","UICheckbox","props","name","onChange","className","checked","disabled","componentClassName","defaultProps","UIIconButton","icon","onClick","UIInput","onBlur","placeholder","required","autofocus","autoFocus","size","length","UISelect","options","label","UIModal","isVisible","onClose","STR","useContext","modalRoot","document","getElementById","createPortal","role","aria-labelledby","aria-modal","CLOSE","AddParcelForm","useDispatch","setParcelNumber","useState","onSubmit","evt","preventDefault","some","parcel","noValidate","target","text","ParcelListItem","onRemoveParcelClick","onParcelUpdate","onParcelArchive","onCheckParcelStatusClick","parcelTitle","setParcelTitle","isApiLoading","setIsApiLoading","useEffect","checkStatusBtnClass","loading","archiveBtnTitle","ev","ParcelList","showArchived","setShowArchived","handleRemoveParcelClick","parcelId","handleCheckParcelStatus","parcelNumer","newData","ThemeToggler","btnIcon","languages","LanguageSelector","currLang","TOGGLE_LANGUAGE","Header","Main","Footer","href","BaseLayout","React","Component","Home","App","documentElement","setAttribute","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f994e078.chunk.js","sourcesContent":["class API {\r\n  apiKey: string;\r\n  baseUrl: string;\r\n  constructor(apiKey = '') {\r\n    this.apiKey = apiKey;\r\n    this.baseUrl = 'https://api.novaposhta.ua/v2.0/json/';\r\n  }\r\n\r\n  getParcelInfo = (parcelNumber: string, receiverPhone: string = '') =>\r\n    fetch(this.baseUrl, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        apiKey: this.apiKey,\r\n        modelName: 'TrackingDocument',\r\n        calledMethod: 'getStatusDocuments',\r\n        methodProperties: {\r\n          Documents: [\r\n            {\r\n              DocumentNumber: parcelNumber,\r\n              Phone: receiverPhone,\r\n            },\r\n          ],\r\n        },\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => data);\r\n}\r\n\r\nexport default new API();\r\n","const keyName = process.env.REACT_APP_NAME;\r\n\r\nexport const loadState = () => {\r\n  try {\r\n    const serializedState = localStorage.getItem(keyName);\r\n    if (serializedState === null) {\r\n      return undefined;\r\n    }\r\n    return JSON.parse(serializedState);\r\n  } catch (err) {\r\n    return undefined;\r\n  }\r\n};\r\n\r\nexport const saveState = (state) => {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem(keyName, serializedState);\r\n  } catch {\r\n    console.log('Unable to save to LS');\r\n  }\r\n};\r\n\r\nexport const clearState = () => {\r\n  localStorage.removeItem(keyName);\r\n};\r\n","export const ADD_PARCEL = 'ADD_PARCEL';\r\nexport const UPDATE_PARCEL = 'UPDATE_PARCEL';\r\nexport const REMOVE_PARCEL = 'REMOVE_PARCEL';\r\nexport const API_REQUEST_STARTED = 'API_REQUEST_STARTED';\r\nexport const API_REQUEST_ENDED = 'API_REQUEST_ENDED';\r\nexport const UPDATE_SETTINGS = 'UPDATE_SETTINGS';\r\n","import { ADD_PARCEL, REMOVE_PARCEL, UPDATE_PARCEL } from '../action-types';\r\n\r\nconst initialState = [];\r\n\r\nexport const parcels = (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case ADD_PARCEL:\r\n      return [payload, ...state];\r\n\r\n    case UPDATE_PARCEL:\r\n      return state.map((item) => {\r\n        if (item.id === payload.id) {\r\n          return { ...item, ...payload.data };\r\n        }\r\n        return item;\r\n      });\r\n\r\n    case REMOVE_PARCEL:\r\n      return state.filter((item) => item.id !== payload);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { UPDATE_SETTINGS } from '../action-types';\r\n\r\nconst initialState = {\r\n  language: 'en',\r\n  theme: 'light',\r\n};\r\n\r\nexport const settings = (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case UPDATE_SETTINGS:\r\n      return { ...state, ...payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { API_REQUEST_ENDED, API_REQUEST_STARTED } from '../action-types';\r\n\r\nconst initialState = { error: '', isLoading: false };\r\n\r\nexport const api = (state = initialState, action) => {\r\n  const { type } = action;\r\n  switch (type) {\r\n    case API_REQUEST_STARTED:\r\n      return { ...state, isLoading: true };\r\n    case API_REQUEST_ENDED:\r\n      return { ...state, isLoading: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { parcels } from './_parcels';\r\nimport { settings } from './_settings';\r\nimport { api } from './_api';\r\n\r\nconst rootReducer = combineReducers({\r\n  parcels,\r\n  settings,\r\n  api,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport { ls } from 'services';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst persistedState = ls.loadState();\r\nconst composeTools = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n  rootReducer,\r\n  persistedState,\r\n  composeTools(applyMiddleware(thunk))\r\n);\r\nstore.subscribe(() => {\r\n  const { parcels, settings } = store.getState();\r\n  ls.saveState({\r\n    parcels,\r\n    settings,\r\n  });\r\n});\r\n\r\nexport default store;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","type Translation = {\r\n  [key: string]: { [key: string]: string };\r\n};\r\n\r\nexport const translations: Translation = {\r\n  en: {\r\n    SIGN_IN: 'Sign In',\r\n    TRACK_PARCEL: 'Track',\r\n    ENTER_TRACKING_NUMBER: 'Enter tracking number',\r\n    REMOVE_PARCEL: 'Remove parcel',\r\n    ARCHIVE_PARCEL: 'Archive parcel',\r\n    UNARCHIVE_PARCEL: 'Unarchive parcel',\r\n    CHECK_PARCEL_STATUS: 'Check parcel status',\r\n    NO_PARCELS: 'You have no parcels',\r\n    SHOW_ARCHIVED: 'Show archived',\r\n  },\r\n  ua: {\r\n    SIGN_IN: 'Увійти',\r\n    TRACK_PARCEL: 'Відстежити',\r\n    ENTER_TRACKING_NUMBER: 'Введіть номер посилки',\r\n    REMOVE_PARCEL: 'Видалити посилку',\r\n    ARCHIVE_PARCEL: 'Додати у архів',\r\n    UNARCHIVE_PARCEL: 'Вилучити з архіва',\r\n    CHECK_PARCEL_STATUS: 'Перевірити статус посилки',\r\n    NO_PARCELS: 'У вас немає посилок',\r\n    SHOW_ARCHIVED: 'Показати архів',\r\n  },\r\n  ru: {\r\n    SIGN_IN: 'Войти',\r\n    TRACK_PARCEL: 'Отследить',\r\n    ENTER_TRACKING_NUMBER: 'Введите номер посылки',\r\n    REMOVE_PARCEL: 'Удалить посылку',\r\n    ARCHIVE_PARCEL: 'Добавить в архив',\r\n    UNARCHIVE_PARCEL: 'Удалить из архива',\r\n    CHECK_PARCEL_STATUS: 'Проверить статус посылки',\r\n    NO_PARCELS: 'У вас нет посылок',\r\n    SHOW_ARCHIVED: 'Показать архив',\r\n  },\r\n};\r\n","/* eslint-disable react/prop-types */\r\nimport { createContext } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { translations } from 'constants/translations';\r\n\r\nconst Localization = createContext();\r\nLocalization.displayName = 'Localization';\r\n\r\nconst LocalizationProvider = ({ children }) => {\r\n  const { language } = useSelector((state) => state.settings);\r\n\r\n  return (\r\n    <Localization.Provider value={translations[language]}>\r\n      {children}\r\n    </Localization.Provider>\r\n  );\r\n};\r\n\r\nexport { Localization, LocalizationProvider };\r\n","import { API_REQUEST_STARTED, API_REQUEST_ENDED } from './action-types';\r\n\r\nconst actionApiRequestStarted = () => ({ type: API_REQUEST_STARTED });\r\n\r\nconst actionApiRequestEnded = () => ({ type: API_REQUEST_ENDED });\r\n\r\nexport { actionApiRequestStarted, actionApiRequestEnded };\r\n","import { api } from 'services';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport {\r\n  actionApiRequestStarted,\r\n  actionApiRequestEnded,\r\n} from '../action-creators';\r\nimport { ADD_PARCEL, UPDATE_PARCEL, REMOVE_PARCEL } from '../action-types';\r\n\r\nconst formatAPIResponse = (response) => {\r\n  const data = response.data[0];\r\n  return {\r\n    number: data.Number,\r\n    citySender: data.CitySender,\r\n    cityRecipient: data.CityRecipient,\r\n    status: data.Status,\r\n    scheduledDeliveryDate: data.ScheduledDeliveryDate,\r\n    dateCreated: data.DateCreated,\r\n    weight: data.DocumentWeight,\r\n    statusCode: data.StatusCode,\r\n    warehouseRecipient: data.WarehouseRecipientNumber.toString(),\r\n    deliveryCost: Number(data.DocumentCost),\r\n  };\r\n};\r\n\r\nconst createNewParcel = (data) => ({\r\n  id: uuidv4(),\r\n  title: 'New parcel',\r\n  isArchived: false,\r\n  ...formatAPIResponse(data),\r\n});\r\n\r\nconst isParcelNotFound = (data) => data.data[0].StatusCode === '3';\r\n\r\nconst actionAddParcel = (data) => ({\r\n  type: ADD_PARCEL,\r\n  payload: createNewParcel(data),\r\n});\r\n\r\nconst actionUpdateParcel = (id, data) => ({\r\n  type: UPDATE_PARCEL,\r\n  payload: { id, data },\r\n});\r\n\r\nconst actionCheckParcelStatus = (id, data) => ({\r\n  type: UPDATE_PARCEL,\r\n  payload: { id, data: formatAPIResponse(data) },\r\n});\r\n\r\nconst actionRemoveParcel = (id) => ({ type: REMOVE_PARCEL, payload: id });\r\n\r\nexport const addParcel = (number) => (dispatch) => {\r\n  dispatch(actionApiRequestStarted());\r\n  api\r\n    .getParcelInfo(number)\r\n    .then((data) => {\r\n      if (isParcelNotFound(data)) {\r\n        alert('Parcel not found!');\r\n        return;\r\n      } else {\r\n        dispatch(actionAddParcel(data));\r\n      }\r\n    })\r\n    .catch((error) => console.log('Error', error))\r\n    .finally(() => dispatch(actionApiRequestEnded()));\r\n};\r\n\r\nexport const checkParcelStatus = (id, number) => (dispatch) => {\r\n  dispatch(actionApiRequestStarted());\r\n  api\r\n    .getParcelInfo(number)\r\n    .then((data) => {\r\n      if (isParcelNotFound(data)) {\r\n        alert('Parcel not found!');\r\n        return;\r\n      } else {\r\n        dispatch(actionCheckParcelStatus(id, data));\r\n      }\r\n    })\r\n    .catch((error) => console.log('Error', error))\r\n    .finally(() => dispatch(actionApiRequestEnded()));\r\n};\r\n\r\nexport const updateParcel = (id, data) => (dispatch) => {\r\n  dispatch(actionUpdateParcel(id, data));\r\n};\r\n\r\nexport const removeParcel = (id) => (dispatch) => {\r\n  dispatch(actionRemoveParcel(id));\r\n};\r\n","import { UPDATE_SETTINGS } from '../action-types';\r\n\r\nexport const updateSettings = (data) => (dispatch) => {\r\n  dispatch({ type: UPDATE_SETTINGS, payload: data });\r\n};\r\n","const actionsConfig = {\r\n  string: (arg) => arg,\r\n  object: (arg) =>\r\n    Object.keys(arg)\r\n      .filter((key) => arg[key])\r\n      .join(' ')\r\n      .trim(),\r\n  array: (arg) => arg.join(' ').trim(),\r\n};\r\nconst typesConfig = {\r\n  string: (arg) => typeof arg === 'string',\r\n  object: (arg) => typeof arg === 'object' && !Array.isArray(arg),\r\n  array: (arg) => Array.isArray(arg),\r\n};\r\nconst mapConfig = (arg) => {\r\n  const argType = Object.keys(typesConfig).find((key) => typesConfig[key](arg));\r\n  return actionsConfig[argType](arg);\r\n};\r\n\r\nexport const myClassnames = (...args) =>\r\n  args\r\n    .map((arg) => mapConfig(arg))\r\n    .join(' ')\r\n    .trim();\r\n","/* eslint-disable jsx-a11y/label-has-associated-control */\r\nimport PropTypes from 'prop-types';\r\nimport { myClassnames } from 'utils';\r\n\r\nimport './UICheckbox.scss';\r\n\r\nconst NAME_SPACE = 'ui-checkbox';\r\n\r\nconst UICheckbox = (props) => {\r\n  const {\r\n    id, name, onChange, className, title, checked, disabled\r\n  } = props;\r\n  const componentClassName = myClassnames(NAME_SPACE, className);\r\n\r\n  return (\r\n    <>\r\n      <label className={componentClassName}>\r\n        <input\r\n          type=\"checkbox\"\r\n          name={name}\r\n          id={id}\r\n          className={`${NAME_SPACE}__input`}\r\n          title={title}\r\n          onChange={onChange}\r\n          checked={checked}\r\n          disabled={disabled}\r\n        />\r\n        <span className={`${NAME_SPACE}__checkmark`} />\r\n      </label>\r\n    </>\r\n  );\r\n};\r\n\r\nUICheckbox.defaultProps = {\r\n  className: '',\r\n  title: '',\r\n  onChange: null,\r\n  name: 'ui-checkbox',\r\n  id: '',\r\n  checked: false,\r\n  disabled: false,\r\n};\r\n\r\nUICheckbox.propTypes = {\r\n  onChange: PropTypes.func,\r\n  className: PropTypes.string,\r\n  title: PropTypes.string,\r\n  id: PropTypes.string,\r\n  name: PropTypes.string,\r\n  checked: PropTypes.bool,\r\n  disabled: PropTypes.bool\r\n};\r\n\r\nexport { UICheckbox };\r\n","import { myClassnames } from 'utils';\r\n\r\nimport './UIIconButton.scss';\r\n\r\ninterface UIIconButtonProps {\r\n  onClick?: () => void;\r\n  className?: string;\r\n  icon?: string;\r\n  type?: 'button' | 'submit' | 'reset';\r\n  title?: string;\r\n}\r\n\r\nconst NAME_SPACE = 'ui-icon-button';\r\n\r\nconst UIIconButton = (props: UIIconButtonProps) => {\r\n  const {\r\n    icon = 'trash',\r\n    onClick,\r\n    className = '',\r\n    title = 'Click me',\r\n    type = 'button',\r\n  } = props;\r\n  const componentClassName = myClassnames(\r\n    NAME_SPACE,\r\n    `icon-${icon}`,\r\n    className\r\n  );\r\n\r\n  return (\r\n    <button\r\n      type={type}\r\n      className={componentClassName}\r\n      onClick={onClick}\r\n      title={title}\r\n    >\r\n      <span className={`${NAME_SPACE}__text`}>{title}</span>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport { UIIconButton };\r\n","import PropTypes from 'prop-types';\r\nimport { myClassnames } from 'utils';\r\n\r\nimport './UIInput.scss';\r\n\r\nconst NAME_SPACE = 'ui-input';\r\n\r\nconst UIInput = (props) => {\r\n  const {\r\n    type, name, value, onChange, onBlur, className, placeholder, required, autofocus, disabled,\r\n  } = props;\r\n  const componentClassName = myClassnames(NAME_SPACE, className);\r\n\r\n  return (\r\n    <input\r\n      type={type}\r\n      name={name}\r\n      value={value}\r\n      className={componentClassName}\r\n      onChange={onChange}\r\n      onBlur={onBlur}\r\n      placeholder={placeholder}\r\n      required={required}\r\n      autoFocus={autofocus}\r\n      disabled={disabled}\r\n      size={value.length}\r\n    />\r\n  );\r\n};\r\n\r\nUIInput.defaultProps = {\r\n  className: '',\r\n  onChange: null,\r\n  onBlur: null,\r\n  value: '',\r\n  type: 'text',\r\n  name: 'ui-input',\r\n  placeholder: '',\r\n  required: false,\r\n  autofocus: false,\r\n  disabled: false,\r\n};\r\n\r\nUIInput.propTypes = {\r\n  type: PropTypes.string,\r\n  name: PropTypes.string,\r\n  className: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  onBlur: PropTypes.func,\r\n  value: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  required: PropTypes.bool,\r\n  autofocus: PropTypes.bool,\r\n  disabled: PropTypes.bool,\r\n};\r\n\r\nexport { UIInput };\r\n","import PropTypes from 'prop-types';\r\nimport { myClassnames } from 'utils';\r\n\r\nimport './UISelect.scss';\r\n\r\nconst NAME_SPACE = 'ui-select';\r\n\r\nconst UISelect = (props) => {\r\n  const {\r\n    value, onChange, options, className, title, required,\r\n  } = props;\r\n  const componentClassName = myClassnames(NAME_SPACE, className);\r\n\r\n  return (\r\n    <select\r\n      onChange={onChange}\r\n      value={value}\r\n      required={required}\r\n      className={componentClassName}\r\n      title={title}\r\n    >\r\n      {options.map(({ value, disabled, label }) => (\r\n        <option\r\n          key={value}\r\n          value={value}\r\n          disabled={disabled}\r\n          className={`${NAME_SPACE}__option`}\r\n        >\r\n          {label}\r\n        </option>\r\n      ))}\r\n    </select>\r\n  );\r\n};\r\n\r\nUISelect.defaultProps = {\r\n  className: '',\r\n  onChange: null,\r\n  value: '',\r\n  title: 'Select me',\r\n  options: [\r\n    {\r\n      value: 'opt1',\r\n      label: 'Option 1',\r\n    },\r\n    {\r\n      value: 'opt2',\r\n      label: 'Option 2',\r\n    },\r\n    {\r\n      value: 'opt3',\r\n      label: 'Option 3',\r\n    },\r\n  ],\r\n  required: false,\r\n};\r\n\r\nUISelect.propTypes = {\r\n  className: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  value: PropTypes.string,\r\n  title: PropTypes.string,\r\n  options: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      value: PropTypes.string,\r\n      label: PropTypes.string,\r\n      disabled: PropTypes.bool,\r\n    }),\r\n  ),\r\n  required: PropTypes.bool,\r\n};\r\n\r\nexport { UISelect };\r\n","import { createPortal } from 'react-dom';\r\nimport { useContext } from 'react';\r\nimport { Localization } from 'contexts';\r\nimport { myClassnames } from 'utils';\r\nimport { UIIconButton } from 'modules/ui';\r\n\r\nimport './UIModal.scss';\r\n\r\nconst NAME_SPACE = 'ui-modal';\r\n\r\nconst UIModal = ({\r\n  title, isVisible, onClose, children, className,\r\n}) => {\r\n  const STR = useContext(Localization);\r\n  const componentClassName = myClassnames(NAME_SPACE, className);\r\n\r\n  const modalRoot = document.getElementById('modal-root');\r\n\r\n  return isVisible && createPortal(\r\n    (\r\n      <div className={`${NAME_SPACE}__backdrop`}>\r\n        <div\r\n          role=\"dialog\"\r\n          aria-labelledby=\"ui-modal-title\"\r\n          aria-modal=\"true\"\r\n          className={componentClassName}\r\n        >\r\n          <div className=\"ui-modal__header\">\r\n            <h4 id=\"ui-modal-title\" className={`${NAME_SPACE}__title`}>{title}</h4>\r\n            <UIIconButton\r\n              className={`${NAME_SPACE}__btn-close`}\r\n              icon=\"cancel\"\r\n              onClick={onClose}\r\n              title={STR.CLOSE}\r\n            />\r\n          </div>\r\n          <div className={`${NAME_SPACE}__content`}>{children}</div>\r\n        </div>\r\n      </div>\r\n    ),\r\n    modalRoot,\r\n  );\r\n};\r\n\r\nUIModal.defaultProps = {\r\n  title: 'Modal title',\r\n  isVisible: false,\r\n  className: '',\r\n};\r\n\r\nexport { UIModal };\r\n","import { useState, useContext } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addParcel } from 'store/actions';\r\nimport { Localization } from 'contexts';\r\nimport { UIInput, UIIconButton } from 'modules/ui';\r\n\r\nimport './AddParcelForm.scss';\r\n\r\nconst NAME_SPACE = 'add-parcel-form';\r\n\r\nconst AddParcelForm = () => {\r\n  const STR = useContext(Localization);\r\n  const dispatch = useDispatch();\r\n  const { parcels } = useSelector((state) => state);\r\n  const [parcelNumber, setParcelNumber] = useState('');\r\n\r\n  const handleChange = (evt) => setParcelNumber(evt.target.value);\r\n\r\n  const handleTrackParcelSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    if (!parcelNumber) {\r\n      alert('Please enter tracking number!');\r\n      return;\r\n    }\r\n    const isParcelAlreadyExists = parcels.some(parcel => parcel.number === parcelNumber);\r\n    if (isParcelAlreadyExists) {\r\n      alert('Parcel already added!');\r\n      return\r\n    }\r\n    dispatch(addParcel(parcelNumber));\r\n    setParcelNumber('');\r\n  }\r\n\r\n  return (\r\n    <form\r\n      action=\"\"\r\n      className={NAME_SPACE}\r\n      onSubmit={handleTrackParcelSubmit}\r\n      noValidate\r\n    >\r\n      <UIInput\r\n        className={`${NAME_SPACE}__input`}\r\n        value={parcelNumber}\r\n        onChange={handleChange}\r\n        placeholder={STR.ENTER_TRACKING_NUMBER}\r\n        required\r\n      />\r\n      <UIIconButton\r\n        type=\"submit\"\r\n        icon=\"search\"\r\n        className={`${NAME_SPACE}__btn`}\r\n        text={STR.TRACK_PARCEL}\r\n      />\r\n    </form>\r\n  );\r\n}\r\n\r\nexport { AddParcelForm };\r\n","import { useState, useEffect } from 'react';\r\nimport { UIIconButton, UIInput } from 'modules/ui';\r\nimport { myClassnames } from 'utils';\r\n\r\nimport './ParcelListItem.scss';\r\n\r\nconst NAME_SPACE = 'parcel-list-item';\r\n\r\nconst ParcelListItem = (props) => {\r\n  const { data, onRemoveParcelClick, onParcelUpdate, onParcelArchive, onCheckParcelStatusClick, STR } = props;\r\n  const { id, number, citySender, cityRecipient, status, scheduledDeliveryDate, isArchived } = data;\r\n  const [parcelTitle, setParcelTitle] = useState(data.title);\r\n  const [isApiLoading, setIsApiLoading] = useState(false);\r\n\r\n  useEffect(() => setIsApiLoading(false), [data]);\r\n\r\n  const checkStatusBtnClass = myClassnames(`${NAME_SPACE}__check-btn`, { loading: isApiLoading });\r\n\r\n  const handleParcelTitleChange = (ev) => setParcelTitle(ev.target.value);\r\n\r\n  const handleParcelTitleBlur = () => onParcelUpdate(id, { title: parcelTitle });\r\n\r\n  const handleArchiveParcelClick = () => onParcelArchive(id);\r\n\r\n  const handleParcelStatusCheckClick = () => {\r\n    setIsApiLoading(true);\r\n    onCheckParcelStatusClick(id);\r\n  }\r\n  const handleRemoveParcelClick = () => onRemoveParcelClick(id);\r\n\r\n  const archiveBtnTitle = isArchived ? STR.UNARCHIVE_PARCEL : STR.ARCHIVE_PARCEL\r\n\r\n  return (\r\n    <li id={id} className={NAME_SPACE}>\r\n      <header className={`${NAME_SPACE}__header`}>\r\n        <UIInput\r\n          className={`${NAME_SPACE}__title`}\r\n          value={parcelTitle}\r\n          onChange={handleParcelTitleChange}\r\n          onBlur={handleParcelTitleBlur}\r\n        />\r\n        {!isArchived && (<UIIconButton\r\n          onClick={handleParcelStatusCheckClick}\r\n          className={checkStatusBtnClass}\r\n          title={STR.CHECK_PARCEL_STATUS}\r\n          icon=\"arrows-cw\"\r\n        />)\r\n        }\r\n        <UIIconButton\r\n          onClick={handleArchiveParcelClick}\r\n          className={`${NAME_SPACE}__archive-btn`}\r\n          title={archiveBtnTitle}\r\n          icon=\"box\"\r\n        />\r\n        <UIIconButton\r\n          onClick={handleRemoveParcelClick}\r\n          className={`${NAME_SPACE}__remove-btn`}\r\n          title={STR.REMOVE_PARCEL}\r\n          icon=\"trash\"\r\n        />\r\n      </header>\r\n      <main className={`${NAME_SPACE}__main`}>\r\n        <h4 className={`${NAME_SPACE}__number`}>{number}</h4>\r\n        <div className={`${NAME_SPACE}__route`}>{citySender} ⇒ {cityRecipient}</div>\r\n        <div className={`${NAME_SPACE}__status`}>{status}</div>\r\n        <div className={`${NAME_SPACE}__delivery-date`}>{scheduledDeliveryDate}</div>\r\n      </main>\r\n    </li >\r\n  );\r\n};\r\n\r\nexport { ParcelListItem };\r\n","import { useContext, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { removeParcel, updateParcel, checkParcelStatus } from 'store/actions';\r\nimport { UICheckbox } from 'modules/ui';\r\nimport { Localization } from 'contexts';\r\nimport { ParcelListItem } from './ParcelListItem';\r\n\r\nimport './ParcelList.scss';\r\n\r\nconst NAME_SPACE = 'parcel-list';\r\n\r\nconst ParcelList = () => {\r\n  const dispatch = useDispatch();\r\n  const STR = useContext(Localization);\r\n  const [showArchived, setShowArchived] = useState(false);\r\n\r\n  const parcels = useSelector((state) => state.parcels).filter(parcel => parcel.isArchived === showArchived);\r\n  const isApiLoading = useSelector((state) => state.api.isLoading);\r\n\r\n\r\n  const handleShowArchivedChange = () => {\r\n    setShowArchived(!showArchived)\r\n  }\r\n\r\n  const handleRemoveParcelClick = (parcelId) => dispatch(removeParcel(parcelId));\r\n\r\n  const handleCheckParcelStatus = (parcelId) => {\r\n    const { number: parcelNumer } = parcels.find(parcel => parcel.id === parcelId);\r\n    dispatch(checkParcelStatus(parcelId, parcelNumer));\r\n  }\r\n\r\n  const onParcelUpdate = (parcelId, newData) => dispatch(updateParcel(parcelId, newData));\r\n  const onParcelArchive = (parcelId) => {\r\n    const { isArchived } = parcels.find(parcel => parcel.id === parcelId);\r\n    dispatch(updateParcel(parcelId, { isArchived: !isArchived }))\r\n  }\r\n    ;\r\n\r\n  return (\r\n    <>\r\n      <div className={`${NAME_SPACE}__show-archived`}>\r\n        <span>{STR.SHOW_ARCHIVED}</span>\r\n        <UICheckbox checked={showArchived} onChange={handleShowArchivedChange} />\r\n      </div>\r\n      {parcels.length\r\n        ? (<>\r\n\r\n          <ul className={NAME_SPACE}>\r\n            {parcels.map((parcel) =>\r\n              <ParcelListItem\r\n                key={parcel.id}\r\n                data={parcel}\r\n                STR={STR}\r\n                isApiLoading={isApiLoading}\r\n                onRemoveParcelClick={handleRemoveParcelClick}\r\n                onCheckParcelStatusClick={handleCheckParcelStatus}\r\n                onParcelUpdate={onParcelUpdate}\r\n                onParcelArchive={onParcelArchive}\r\n              />)}\r\n          </ul>\r\n        </>)\r\n        : (<div className={`${NAME_SPACE}__no-parcels`}>{STR.NO_PARCELS}</div>)}\r\n    </>\r\n  );\r\n};\r\n\r\nexport { ParcelList };\r\n","import PropTypes from 'prop-types';\r\nimport { myClassnames } from 'utils';\r\nimport { UIIconButton } from 'modules/ui';\r\n\r\nimport './UIDropdown.scss';\r\n\r\nconst NAME_SPACE = 'ui-dropdown';\r\n\r\nconst UIDropdown = ({\r\n  children, onToggle, extraClassName, isOpened,\r\n}) => {\r\n  const menuTogglerIcon = isOpened ? 'cancel' : 'ellipsis-vert';\r\n  const componentClassName = myClassnames(NAME_SPACE, extraClassName);\r\n\r\n  return (\r\n    <div className={componentClassName}>\r\n      <UIIconButton\r\n        onClick={onToggle}\r\n        icon={menuTogglerIcon}\r\n        className={`${NAME_SPACE}__toggler`}\r\n      />\r\n      {isOpened && (\r\n        <div className={`${NAME_SPACE}__container`}>\r\n          {children}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nUIDropdown.defaultProps = {\r\n  extraClassName: '',\r\n  children: null,\r\n};\r\n\r\nUIDropdown.propTypes = {\r\n  onToggle: PropTypes.func.isRequired,\r\n  extraClassName: PropTypes.string,\r\n  isOpened: PropTypes.bool.isRequired,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node,\r\n  ]),\r\n};\r\n\r\nexport { UIDropdown };\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { updateSettings } from 'store/actions';\r\nimport { UIIconButton } from 'modules/ui';\r\n\r\nconst ThemeToggler = () => {\r\n  const dispatch = useDispatch();\r\n  const { theme } = useSelector((state) => state.settings);\r\n  const btnIcon = theme === 'light' ? 'moon' : 'sun';\r\n\r\n  const handleThemeChange = () => {\r\n    const newTheme = theme === 'light' ? 'dark' : 'light';\r\n    dispatch(updateSettings({ theme: newTheme }));\r\n  }\r\n\r\n  return (\r\n    <UIIconButton\r\n      icon={btnIcon}\r\n      onClick={handleThemeChange}\r\n      className=\"theme-toggler\"\r\n    />\r\n  );\r\n};\r\n\r\nexport { ThemeToggler };\r\n","export const languages: Array<{ value: string; label: string }> = [\r\n  { value: 'en', label: 'EN' },\r\n  { value: 'ua', label: 'UA' },\r\n  { value: 'ru', label: 'RU' },\r\n];\r\n","import { useContext } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Localization } from 'contexts';\r\nimport { updateSettings } from 'store/actions';\r\nimport { languages } from 'constants/languages';\r\nimport { UISelect } from 'modules/ui';\r\n\r\nimport './LanguageSelector.scss';\r\n\r\nconst LanguageSelector = () => {\r\n  const dispatch = useDispatch();\r\n  const STR = useContext(Localization);\r\n  const { language: currLang } = useSelector((state) => state.settings);\r\n\r\n  const handleLanguageChange = (evt) => dispatch(updateSettings({ language: evt.target.value }))\r\n\r\n  return (\r\n    <UISelect\r\n      value={currLang}\r\n      onChange={handleLanguageChange}\r\n      options={languages}\r\n      className=\"language-selector\"\r\n      title={STR.TOGGLE_LANGUAGE}\r\n    />\r\n  );\r\n};\r\n\r\nexport { LanguageSelector };\r\n","import { ThemeToggler, LanguageSelector } from 'modules/settings';\r\nimport { AddParcelForm } from 'modules/parcels';\r\n\r\nimport './Header.scss';\r\n\r\nconst NAME_SPACE = 'header';\r\n\r\nconst Header = () => (\r\n  <header className={NAME_SPACE}>\r\n    <div className={`${NAME_SPACE}__content wrapper`}>\r\n      <span className={`${NAME_SPACE}__logo`}>\r\n        {process.env.REACT_APP_NAME}\r\n      </span>\r\n      <div className={`${NAME_SPACE}__middle`}>\r\n        <AddParcelForm />\r\n      </div>\r\n      <div className={`${NAME_SPACE}__right`}>\r\n        <LanguageSelector />\r\n        <ThemeToggler />\r\n      </div>\r\n    </div>\r\n  </header>\r\n);\r\n\r\nexport { Header };\r\n","import './Main.scss';\r\n\r\ninterface IProps extends React.HTMLAttributes<Element> {}\r\n\r\nconst Main = ({ children }: IProps) => (\r\n  <main className=\"main wrapper\">\r\n    <div className=\"main__content\">{children}</div>\r\n  </main>\r\n);\r\n\r\nexport { Main };\r\n","import './Footer.scss';\r\n\r\nconst NAME_SPACE = 'footer';\r\n\r\nconst Footer = () => (\r\n  <footer className={NAME_SPACE}>\r\n    <div className={`${NAME_SPACE}__content wrapper`}>\r\n      <a href={process.env.REACT_APP_AUTHOR_URL}>\r\n        © {process.env.REACT_APP_AUTHOR_NAME}\r\n      </a>\r\n      version {process.env.REACT_APP_VERSION}\r\n    </div>\r\n  </footer>\r\n);\r\n\r\nexport { Footer };\r\n","import { Header } from './Header';\r\nimport { Main } from './Main';\r\nimport { Footer } from './Footer';\r\n\r\ninterface IProps extends React.HTMLAttributes<Element> {}\r\n\r\nconst BaseLayout = ({ children }: IProps) => (\r\n  <div className=\"container\">\r\n    <Header />\r\n    <Main>{children}</Main>\r\n    <Footer />\r\n  </div>\r\n);\r\n\r\nexport { BaseLayout };\r\n","/* eslint-disable react/prop-types */\r\n/* eslint-disable react/destructuring-assignment */\r\n/* eslint-disable react/state-in-constructor */\r\nimport React from 'react';\r\n\r\nimport './ErrorBoundary.scss';\r\n\r\nclass ErrorBoundary extends React.Component {\r\n  state = { error: null, errorInfo: null };\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    this.setState({\r\n      error,\r\n      errorInfo,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { errorInfo, error } = this.state;\r\n    if (errorInfo) {\r\n      return (\r\n        <div className=\"error-boundary\">\r\n          <h2 className=\"error-boundary__title\">\r\n            Sorry. Something went wrong :(\r\n          </h2>\r\n          <div className=\"error-boundary__details\">\r\n            <p>\r\n              {error && <strong>{error.toString()}</strong>}\r\n              <br />\r\n              {errorInfo.componentStack}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport { ErrorBoundary };\r\n","import { BaseLayout } from 'modules/layouts';\r\nimport { ParcelList } from 'modules/parcels';\r\n\r\nconst Home = () => (\r\n  <BaseLayout>\r\n    <ParcelList />\r\n  </BaseLayout>\r\n);\r\n\r\nexport { Home };\r\n","import { useSelector } from 'react-redux';\r\nimport { Home } from 'pages';\r\n\r\nconst App = () => {\r\n  const { theme } = useSelector((state) => state.settings);\r\n  document.documentElement.setAttribute('data-theme', theme);\r\n  return <Home />;\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from 'store';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { LocalizationProvider } from 'contexts';\r\nimport App from './App';\r\n\r\nimport 'index.scss';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n      <LocalizationProvider>\r\n        <App />\r\n      </LocalizationProvider>\r\n    </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}
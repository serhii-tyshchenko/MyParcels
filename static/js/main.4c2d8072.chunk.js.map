{"version":3,"sources":["services/api/novaposhta.ts","services/db/ls.js","store/action-types.js","store/reducers/_parcels.js","store/reducers/_settings.js","store/reducers/_api.js","store/reducers/index.js","store/index.js","reportWebVitals.ts","assets/localization/translations.ts","contexts/localization.jsx","assets/localization/index.js","store/action-creators.js","store/actions/_parcels.js","store/actions/_settings.js","modules/ui/UIButton/UIButton.tsx","modules/ui/UIIconButton/UIIconButton.tsx","modules/ui/UIInput/UIInput.jsx","modules/ui/UISelect/UISelect.jsx","modules/ui/UIModal/UIModal.jsx","modules/parcels/AddParcelForm/AddParcelForm.jsx","modules/parcels/ParcelList/ParcelListItem/ParcelListItem.jsx","modules/parcels/ParcelList/ParcelList.jsx","modules/ui/UIDropdown/UIDropdown.jsx","modules/settings/ThemeToggler/ThemeToggler.jsx","modules/settings/LanguageSelector/LanguageSelector.jsx","modules/layouts/Header/Header.tsx","modules/layouts/Main/Main.tsx","modules/layouts/Footer/Footer.tsx","modules/layouts/BaseLayout.tsx","modules/layouts/ErrorBoundary/ErrorBoundary.jsx","pages/Home/Home.tsx","App.jsx","index.jsx"],"names":["constructor","apiKey","baseUrl","getParcelInfo","parcelNumber","receiverPhone","fetch","this","method","headers","body","JSON","stringify","modelName","calledMethod","methodProperties","Documents","DocumentNumber","Phone","then","response","json","data","keyName","process","loadState","serializedState","localStorage","getItem","parse","err","saveState","state","setItem","console","log","clearState","removeItem","ADD_PARCEL","UPDATE_PARCEL","REMOVE_PARCEL","API_REQUEST_STARTED","API_REQUEST_ENDED","UPDATE_SETTINGS","initialState","language","theme","error","isLoading","rootReducer","combineReducers","parcels","action","type","payload","map","item","id","filter","settings","api","persistedState","ls","composeTools","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","subscribe","getState","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","languages","value","label","translations","en","SIGN_IN","TRACK_PARCEL","ENTER_TRACKING_NUMBER","CHECK_PARCEL_STATUS","ua","ru","Localization","createContext","displayName","LocalizationProvider","children","useSelector","Provider","lang","actionApiRequestStarted","actionApiRequestEnded","formatAPIResponse","number","Number","citySender","CitySender","cityRecipient","CityRecipient","status","Status","scheduledDeliveryDate","ScheduledDeliveryDate","dateCreated","DateCreated","weight","DocumentWeight","statusCode","StatusCode","warehouseRecipient","WarehouseRecipientNumber","toString","deliveryCost","DocumentCost","isParcelNotFound","addParcel","dispatch","alert","uuidv4","title","actionAddParcel","catch","finally","checkParcelStatus","actionCheckParcelStatus","updateParcel","actionUpdateParcel","removeParcel","actionRemoveParcel","updateSettings","UIButton","props","onClick","extraClassName","btnType","size","text","componentClassName","className","UIIconButton","icon","UIInput","name","onChange","onBlur","placeholder","required","autofocus","disabled","autoFocus","length","defaultProps","UISelect","options","option","UIModal","isVisible","onClose","STR","useContext","modalRoot","document","getElementById","createPortal","role","aria-labelledby","aria-modal","CLOSE","AddParcelForm","useDispatch","setParcelNumber","useState","onSubmit","evt","preventDefault","some","parcel","noValidate","target","ParcelListItem","onRemoveParcelClick","onParcelTitleBlur","onCheckParcelStatusClick","parcelTitle","setParcelTitle","isApiLoading","setApiLoading","useEffect","checkStatusBtnClass","ev","ParcelList","handleRemoveParcelClick","e","parcelId","closest","handleCheckParcelStatus","parcelNumer","find","handleParcelTitleBlur","newParcelTitle","ThemeToggler","btnIcon","LanguageSelector","currLang","TOGGLE_LANGUAGE","Header","Main","Footer","BaseLayout","React","Component","Home","App","documentElement","setAttribute","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.4c2d8072.chunk.js","sourcesContent":["class API {\r\n  apiKey: string;\r\n  baseUrl: string;\r\n  constructor(apiKey = '') {\r\n    this.apiKey = apiKey;\r\n    this.baseUrl = 'https://api.novaposhta.ua/v2.0/json/';\r\n  }\r\n\r\n  getParcelInfo = (parcelNumber: string, receiverPhone: string = '') =>\r\n    fetch(this.baseUrl, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        apiKey: this.apiKey,\r\n        modelName: 'TrackingDocument',\r\n        calledMethod: 'getStatusDocuments',\r\n        methodProperties: {\r\n          Documents: [\r\n            {\r\n              DocumentNumber: parcelNumber,\r\n              Phone: receiverPhone,\r\n            },\r\n          ],\r\n        },\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => data);\r\n}\r\n\r\nexport default new API();\r\n","const keyName = process.env.REACT_APP_NAME;\r\n\r\nexport const loadState = () => {\r\n  try {\r\n    const serializedState = localStorage.getItem(keyName);\r\n    if (serializedState === null) {\r\n      return undefined;\r\n    }\r\n    return JSON.parse(serializedState);\r\n  } catch (err) {\r\n    return undefined;\r\n  }\r\n};\r\n\r\nexport const saveState = (state) => {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem(keyName, serializedState);\r\n  } catch {\r\n    console.log('Unable to save to LS');\r\n  }\r\n};\r\n\r\nexport const clearState = () => {\r\n  localStorage.removeItem(keyName);\r\n};\r\n","export const ADD_PARCEL = 'ADD_PARCEL';\r\nexport const UPDATE_PARCEL = 'UPDATE_PARCEL';\r\nexport const REMOVE_PARCEL = 'REMOVE_PARCEL';\r\nexport const API_REQUEST_STARTED = 'API_REQUEST_STARTED';\r\nexport const API_REQUEST_ENDED = 'API_REQUEST_ENDED';\r\nexport const UPDATE_SETTINGS = 'UPDATE_SETTINGS';\r\n","import { ADD_PARCEL, REMOVE_PARCEL, UPDATE_PARCEL } from '../action-types';\r\n\r\nconst initialState = [];\r\n\r\nexport const parcels = (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case ADD_PARCEL:\r\n      return [payload, ...state];\r\n\r\n    case UPDATE_PARCEL:\r\n      return state.map((item) => {\r\n        if (item.id === payload.id) {\r\n          return { ...item, ...payload.data };\r\n        }\r\n        return item;\r\n      });\r\n\r\n    case REMOVE_PARCEL:\r\n      return state.filter((item) => item.id !== payload);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { UPDATE_SETTINGS } from '../action-types';\r\n\r\nconst initialState = {\r\n  language: 'en',\r\n  theme: 'light',\r\n};\r\n\r\nexport const settings = (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case UPDATE_SETTINGS:\r\n      return { ...state, ...payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { API_REQUEST_ENDED, API_REQUEST_STARTED } from '../action-types';\r\n\r\nconst initialState = { error: '', isLoading: false };\r\n\r\nexport const api = (state = initialState, action) => {\r\n  const { type } = action;\r\n  switch (type) {\r\n    case API_REQUEST_STARTED:\r\n      return { ...state, isLoading: true };\r\n    case API_REQUEST_ENDED:\r\n      return { ...state, isLoading: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { parcels } from './_parcels';\r\nimport { settings } from './_settings';\r\nimport { api } from './_api';\r\n\r\nconst rootReducer = combineReducers({\r\n  parcels,\r\n  settings,\r\n  api,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport { ls } from 'services';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst persistedState = ls.loadState();\r\nconst composeTools = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n  rootReducer,\r\n  persistedState,\r\n  composeTools(applyMiddleware(thunk))\r\n);\r\nstore.subscribe(() => {\r\n  const { parcels, settings } = store.getState();\r\n  ls.saveState({\r\n    parcels,\r\n    settings,\r\n  });\r\n});\r\n\r\nexport default store;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const languages: Array<{ value: string; label: string }> = [\r\n  { value: 'en', label: 'EN' },\r\n  { value: 'ua', label: 'UA' },\r\n  { value: 'ru', label: 'RU' },\r\n];\r\n\r\ntype Translation = {\r\n  [key: string]: { [key: string]: string };\r\n};\r\n\r\nconst translations: Translation = {\r\n  en: {\r\n    SIGN_IN: 'Sign In',\r\n    TRACK_PARCEL: 'Track',\r\n    ENTER_TRACKING_NUMBER: 'Enter tracking number',\r\n    REMOVE_PARCEL: 'Remove parcel',\r\n    CHECK_PARCEL_STATUS: 'Check parcel status',\r\n  },\r\n  ua: {\r\n    SIGN_IN: 'Увійти',\r\n    TRACK_PARCEL: 'Відстежити',\r\n    ENTER_TRACKING_NUMBER: 'Введіть номер посилки',\r\n    REMOVE_PARCEL: 'Видалити посилку',\r\n    CHECK_PARCEL_STATUS: 'Перевірити статус посилки',\r\n  },\r\n  ru: {\r\n    SIGN_IN: 'Войти',\r\n    TRACK_PARCEL: 'Отследить',\r\n    ENTER_TRACKING_NUMBER: 'Введите номер посылки',\r\n    REMOVE_PARCEL: 'Удалить посылку',\r\n    CHECK_PARCEL_STATUS: 'Проверить статус посылки',\r\n  },\r\n};\r\n\r\nexport { translations, languages };\r\n","/* eslint-disable react/prop-types */\r\nimport { createContext } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { getLocalization } from 'assets/localization';\r\n\r\nconst Localization = createContext();\r\nLocalization.displayName = 'Localization';\r\n\r\nconst LocalizationProvider = ({ children }) => {\r\n  const { language } = useSelector((state) => state.settings);\r\n\r\n  return (\r\n    <Localization.Provider value={getLocalization(language)}>\r\n      {children}\r\n    </Localization.Provider>\r\n  );\r\n};\r\n\r\nexport { Localization, LocalizationProvider };\r\n","import { translations, languages } from './translations.ts';\r\n\r\nconst getLocalization = (lang) => translations[lang];\r\n\r\nexport { getLocalization, languages };\r\n","import { API_REQUEST_STARTED, API_REQUEST_ENDED } from './action-types';\r\n\r\nfunction actionApiRequestStarted() {\r\n  return { type: API_REQUEST_STARTED };\r\n}\r\n\r\nfunction actionApiRequestEnded() {\r\n  return { type: API_REQUEST_ENDED };\r\n}\r\n\r\nexport { actionApiRequestStarted, actionApiRequestEnded };\r\n","import { api } from 'services';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport {\r\n  actionApiRequestStarted,\r\n  actionApiRequestEnded,\r\n} from '../action-creators';\r\nimport { ADD_PARCEL, UPDATE_PARCEL, REMOVE_PARCEL } from '../action-types';\r\n\r\nfunction formatAPIResponse(response) {\r\n  const data = response.data[0];\r\n  return {\r\n    number: data.Number,\r\n    citySender: data.CitySender,\r\n    cityRecipient: data.CityRecipient,\r\n    status: data.Status,\r\n    scheduledDeliveryDate: data.ScheduledDeliveryDate,\r\n    dateCreated: data.DateCreated,\r\n    weight: data.DocumentWeight,\r\n    statusCode: data.StatusCode,\r\n    warehouseRecipient: data.WarehouseRecipientNumber.toString(),\r\n    deliveryCost: Number(data.DocumentCost),\r\n  };\r\n}\r\n\r\nfunction isParcelNotFound(data) {\r\n  return data.data[0].StatusCode === '3';\r\n}\r\n\r\nfunction actionAddParcel(data) {\r\n  return {\r\n    type: ADD_PARCEL,\r\n    payload: { id: uuidv4(), title: 'New parcel', ...formatAPIResponse(data) },\r\n  };\r\n}\r\n\r\nfunction actionUpdateParcel(id, data) {\r\n  return { type: UPDATE_PARCEL, payload: { id, data } };\r\n}\r\n\r\nfunction actionCheckParcelStatus(id, data) {\r\n  return {\r\n    type: UPDATE_PARCEL,\r\n    payload: { id, data: formatAPIResponse(data) },\r\n  };\r\n}\r\n\r\nfunction actionRemoveParcel(id) {\r\n  return { type: REMOVE_PARCEL, payload: id };\r\n}\r\n\r\nexport const addParcel = (number) => (dispatch) => {\r\n  dispatch(actionApiRequestStarted());\r\n  api\r\n    .getParcelInfo(number)\r\n    .then((data) => {\r\n      if (isParcelNotFound(data)) {\r\n        alert('Parcel not found!');\r\n        return;\r\n      } else {\r\n        dispatch(actionAddParcel(data));\r\n      }\r\n    })\r\n    .catch((error) => console.log('Error', error))\r\n    .finally(() => dispatch(actionApiRequestEnded()));\r\n};\r\n\r\nexport const checkParcelStatus = (id, number) => (dispatch) => {\r\n  dispatch(actionApiRequestStarted());\r\n  api\r\n    .getParcelInfo(number)\r\n    .then((data) => {\r\n      if (isParcelNotFound(data)) {\r\n        alert('Parcel not found!');\r\n        return;\r\n      } else {\r\n        dispatch(actionCheckParcelStatus(id, data));\r\n      }\r\n    })\r\n    .catch((error) => console.log('Error', error))\r\n    .finally(() => dispatch(actionApiRequestEnded()));\r\n};\r\n\r\nexport const updateParcel = (id, data) => (dispatch) => {\r\n  dispatch(actionUpdateParcel(id, data));\r\n};\r\n\r\nexport const removeParcel = (id) => (dispatch) => {\r\n  dispatch(actionRemoveParcel(id));\r\n};\r\n","import { UPDATE_SETTINGS } from '../action-types';\r\n\r\nexport const updateSettings = (data) => (dispatch) => {\r\n  dispatch({ type: UPDATE_SETTINGS, payload: data });\r\n};\r\n","import './UIButton.scss';\r\n\r\ninterface UIButtonProps {\r\n  onClick?: () => void;\r\n  extraClassName?: string;\r\n  type?: 'button' | 'submit' | 'reset';\r\n  btnType?: 'primary' | 'secondary' | 'action';\r\n  size?: 'normal' | 'large' | 'large';\r\n  text: string;\r\n}\r\n\r\nconst UIButton = (props: UIButtonProps) => {\r\n  const {\r\n    onClick,\r\n    extraClassName,\r\n    type = 'button',\r\n    btnType = 'primary',\r\n    size = 'normal',\r\n    text = 'Button',\r\n  }: UIButtonProps = props;\r\n  const componentClassName = `ui-button ui-button--${btnType} ui-button--${size} ${extraClassName}`;\r\n\r\n  return (\r\n    <button type={type} className={componentClassName} onClick={onClick}>\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport { UIButton };\r\n","/* eslint-disable react/button-has-type */\r\nimport './UIIconButton.scss';\r\n\r\ninterface UIIconButtonProps {\r\n  onClick?: () => void,\r\n  extraClassName?: string,\r\n  icon?: string,\r\n  type?: \"button\" | \"submit\" | \"reset\",\r\n  title?: string\r\n}\r\n\r\nconst UIIconButton = (props:UIIconButtonProps) => {\r\n  const {\r\n    icon = '', onClick, extraClassName, title = 'Click me', type = 'button',\r\n  }:UIIconButtonProps = props;\r\n  const componentClassName = `ui-icon-button icon-${icon} ${extraClassName}`;\r\n\r\n  return (\r\n    <button type={type} className={componentClassName} onClick={onClick} title={title}>\r\n      <span className=\"ui-icon-button__text\">{title}</span>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport { UIIconButton };\r\n","/* eslint-disable jsx-a11y/no-autofocus */\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './UIInput.scss';\r\n\r\nconst UIInput = (props) => {\r\n  const {\r\n    type, name, value, onChange, onBlur, extraClassName, placeholder, required, autofocus, disabled,\r\n  } = props;\r\n  const componentClassName = extraClassName ? `ui-input ${extraClassName}` : 'ui-input';\r\n\r\n  return (\r\n    <input\r\n      type={type}\r\n      name={name}\r\n      value={value}\r\n      className={componentClassName}\r\n      onChange={onChange}\r\n      onBlur={onBlur}\r\n      placeholder={placeholder}\r\n      required={required}\r\n      autoFocus={autofocus}\r\n      disabled={disabled}\r\n      size={value.length}\r\n    />\r\n  );\r\n};\r\n\r\nUIInput.defaultProps = {\r\n  extraClassName: '',\r\n  onChange: null,\r\n  onBlur: null,\r\n  value: '',\r\n  type: 'text',\r\n  name: 'ui-input',\r\n  placeholder: '',\r\n  required: false,\r\n  autofocus: false,\r\n  disabled: false,\r\n};\r\n\r\nUIInput.propTypes = {\r\n  type: PropTypes.string,\r\n  name: PropTypes.string,\r\n  extraClassName: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  onBlur: PropTypes.func,\r\n  value: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  required: PropTypes.bool,\r\n  autofocus: PropTypes.bool,\r\n  disabled: PropTypes.bool,\r\n};\r\n\r\nexport { UIInput };\r\n","import PropTypes from 'prop-types';\r\n\r\nimport './UISelect.scss';\r\n\r\nconst UISelect = (props) => {\r\n  const {\r\n    value, onChange, options, extraClassName, title, required,\r\n  } = props;\r\n  const className = extraClassName ? `ui-select ${extraClassName}` : 'ui-select';\r\n\r\n  return (\r\n    <select\r\n      onChange={onChange}\r\n      value={value}\r\n      required={required}\r\n      className={className}\r\n      title={title}\r\n    >\r\n      {options.map((option) => (\r\n        <option\r\n          key={option.value}\r\n          value={option.value}\r\n          disabled={option.disabled}\r\n          className=\"ui-select__option\"\r\n        >\r\n          {option.label}\r\n        </option>\r\n      ))}\r\n    </select>\r\n  );\r\n};\r\n\r\nUISelect.defaultProps = {\r\n  extraClassName: '',\r\n  onChange: null,\r\n  value: '',\r\n  title: 'Select me',\r\n  options: [\r\n    {\r\n      value: 'opt1',\r\n      label: 'Option 1',\r\n    },\r\n    {\r\n      value: 'opt2',\r\n      label: 'Option 2',\r\n    },\r\n    {\r\n      value: 'opt3',\r\n      label: 'Option 3',\r\n    },\r\n  ],\r\n  required: false,\r\n};\r\n\r\nUISelect.propTypes = {\r\n  extraClassName: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  value: PropTypes.string,\r\n  title: PropTypes.string,\r\n  options: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      value: PropTypes.string,\r\n      label: PropTypes.string,\r\n      disabled: PropTypes.bool,\r\n    }),\r\n  ),\r\n  required: PropTypes.bool,\r\n};\r\n\r\nexport { UISelect };\r\n","import { createPortal } from 'react-dom';\r\nimport { useContext } from 'react';\r\nimport { Localization } from 'contexts';\r\nimport { UIIconButton } from 'modules/ui';\r\n\r\nimport './UIModal.scss';\r\n\r\nconst UIModal = ({\r\n  title, isVisible, onClose, children, extraClassName,\r\n}) => {\r\n  const STR = useContext(Localization);\r\n  const componentClassName = extraClassName ? `ui-modal ${extraClassName}` : 'ui-modal';\r\n  const modalRoot = document.getElementById('modal-root');\r\n\r\n  return isVisible && createPortal(\r\n    (\r\n      <div className=\"ui-modal__backdrop\">\r\n        <div\r\n          role=\"dialog\"\r\n          aria-labelledby=\"ui-modal-title\"\r\n          aria-modal=\"true\"\r\n          className={componentClassName}\r\n        >\r\n          <div className=\"ui-modal__header\">\r\n            <h4 id=\"ui-modal-title\" className=\"ui-modal__title\">{title}</h4>\r\n            <UIIconButton\r\n              extraClassName=\"ui-modal__btn-close\"\r\n              icon=\"cancel\"\r\n              onClick={onClose}\r\n              title={STR.CLOSE}\r\n            />\r\n          </div>\r\n          <div className=\"ui-modal__content\">{children}</div>\r\n        </div>\r\n      </div>\r\n    ),\r\n    modalRoot,\r\n  );\r\n};\r\n\r\nUIModal.defaultProps = {\r\n  title: 'Modal title',\r\n  isVisible: false,\r\n};\r\n\r\nexport { UIModal };\r\n","import { useState, useContext } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addParcel } from 'store/actions';\r\nimport { Localization } from 'contexts';\r\nimport { UIButton, UIInput } from 'modules/ui';\r\n\r\nimport './AddParcelForm.scss';\r\n\r\nfunction AddParcelForm() {\r\n  const STR = useContext(Localization);\r\n  const dispatch = useDispatch();\r\n  const { parcels } = useSelector((state) => state);\r\n  const [parcelNumber, setParcelNumber] = useState('');\r\n\r\n  function handleChange(evt) {\r\n    setParcelNumber(evt.target.value);\r\n  }\r\n  function handleTrackParcelSubmit(evt) {\r\n    evt.preventDefault();\r\n    if (!parcelNumber) {\r\n      alert('Please enter tracking number!');\r\n      return;\r\n    }\r\n    const isParcelAlreadyExists = parcels.some(parcel => parcel.number === parcelNumber);\r\n    if (isParcelAlreadyExists) {\r\n      alert('Parcel already added!');\r\n      return\r\n    }\r\n    dispatch(addParcel(parcelNumber));\r\n    setParcelNumber('');\r\n  }\r\n\r\n  return (\r\n    <form\r\n      action=\"\"\r\n      className=\"add-parcel-form\"\r\n      onSubmit={handleTrackParcelSubmit}\r\n      noValidate\r\n    >\r\n      <UIInput\r\n        extraClassName=\"add-parcel-form__input\"\r\n        value={parcelNumber}\r\n        onChange={handleChange}\r\n        placeholder={STR.ENTER_TRACKING_NUMBER}\r\n        required\r\n      />\r\n      <UIButton\r\n        type=\"submit\"\r\n        extraClassName=\"add-parcel-form__btn\"\r\n        text={STR.TRACK_PARCEL}\r\n      />\r\n    </form>\r\n  );\r\n}\r\n\r\nexport { AddParcelForm };\r\n","import { useState, useEffect } from 'react';\r\nimport { UIIconButton, UIInput } from 'modules/ui';\r\n\r\nimport './ParcelListItem.scss';\r\n\r\nconst ParcelListItem = (props) => {\r\n  const { data, onRemoveParcelClick, onParcelTitleBlur, onCheckParcelStatusClick, STR } = props;\r\n  const [parcelTitle, setParcelTitle] = useState(data.title);\r\n  const [isApiLoading, setApiLoading] = useState(false);\r\n  useEffect(() => {\r\n    setApiLoading(false);\r\n  }, [data]);\r\n\r\n  const checkStatusBtnClass = isApiLoading ? 'parcel-list-item__check-btn loading' : 'parcel-list-item__check-btn';\r\n\r\n  function handleParcelTitleChange(ev) {\r\n    setParcelTitle(ev.target.value);\r\n  }\r\n  function handleParcelStatusCheckClick(ev) {\r\n    setApiLoading(true);\r\n    onCheckParcelStatusClick(ev);\r\n  }\r\n\r\n  return (\r\n    <li id={data.id} className=\"parcel-list-item\">\r\n      <header className=\"parcel-list-item__header\">\r\n        <UIInput extraClassName=\"parcel-list-item__title\" value={parcelTitle} onChange={handleParcelTitleChange} onBlur={onParcelTitleBlur} />\r\n        <UIIconButton onClick={handleParcelStatusCheckClick} extraClassName={checkStatusBtnClass} title={STR.CHECK_PARCEL_STATUS} icon=\"arrows-cw\" />\r\n        <UIIconButton onClick={onRemoveParcelClick} extraClassName=\"parcel-list-item__remove-btn\" title={STR.REMOVE_PARCEL} icon=\"trash\" />\r\n      </header>\r\n      <main className=\"parcel-list-item__main\">\r\n        <h4 className=\"parcel-list-item__number\">{data.number}</h4>\r\n        <div className=\"parcel-list-item__route\">{data.citySender} - {data.cityRecipient}</div>\r\n        <div className=\"parcel-list-item__status\">{data.status}</div>\r\n        <div className=\"parcel-list-item__delivery-date\">{data.scheduledDeliveryDate}</div>\r\n      </main>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport { ParcelListItem };\r\n","import { useContext } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { removeParcel, updateParcel, checkParcelStatus } from 'store/actions';\r\nimport { Localization } from 'contexts';\r\nimport { ParcelListItem } from './ParcelListItem';\r\n\r\nimport './ParcelList.scss';\r\n\r\nconst ParcelList = () => {\r\n  const { parcels } = useSelector((state) => state);\r\n  const isApiLoading = useSelector((state) => state.api.isLoading);\r\n  const dispatch = useDispatch();\r\n  const STR = useContext(Localization);\r\n\r\n  function handleRemoveParcelClick(e) {\r\n    const parcelId = e.target.closest('li').id;\r\n    dispatch(removeParcel(parcelId));\r\n  }\r\n\r\n  function handleCheckParcelStatus(e) {\r\n    const parcelId = e.target.closest('li').id;\r\n    const { number: parcelNumer } = parcels.find(parcel => parcel.id === parcelId);\r\n    dispatch(checkParcelStatus(parcelId, parcelNumer));\r\n  }\r\n\r\n  function handleParcelTitleBlur(e) {\r\n    const parcelId = e.target.closest('li').id;\r\n    const newParcelTitle = e.target.value;\r\n    dispatch(updateParcel(parcelId, { title: newParcelTitle }));\r\n  }\r\n\r\n  return (\r\n    <ul className=\"parcel-list\">\r\n      {parcels.map((parcel) =>\r\n        <ParcelListItem\r\n          key={parcel.id}\r\n          data={parcel}\r\n          STR={STR}\r\n          isApiLoading={isApiLoading}\r\n          onRemoveParcelClick={handleRemoveParcelClick}\r\n          onCheckParcelStatusClick={handleCheckParcelStatus}\r\n          onParcelTitleBlur={handleParcelTitleBlur}\r\n        />)}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport { ParcelList };\r\n","import PropTypes from 'prop-types';\r\n\r\nimport { UIIconButton } from 'modules/ui';\r\n\r\nimport './UIDropdown.scss';\r\n\r\nconst UIDropdown = ({\r\n  children, onToggle, extraClassName, isOpened,\r\n}) => {\r\n  const menuTogglerIcon = isOpened ? 'cancel' : 'ellipsis-vert';\r\n  const componentClassName = extraClassName ? `ui-dropdown ${extraClassName}` : 'ui-dropdown';\r\n  return (\r\n    <div className={componentClassName}>\r\n      <UIIconButton onClick={onToggle} icon={menuTogglerIcon} extraClassName=\"ui-dropdown__toggler\" />\r\n      {isOpened && (\r\n        <div className=\"ui-dropdown__container\">\r\n          {children}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nUIDropdown.defaultProps = {\r\n  extraClassName: '',\r\n  children: null,\r\n};\r\n\r\nUIDropdown.propTypes = {\r\n  onToggle: PropTypes.func.isRequired,\r\n  extraClassName: PropTypes.string,\r\n  isOpened: PropTypes.bool.isRequired,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node,\r\n  ]),\r\n};\r\n\r\nexport { UIDropdown };\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { updateSettings } from 'store/actions';\r\nimport { UIIconButton } from 'modules/ui';\r\n\r\nconst ThemeToggler = () => {\r\n  const dispatch = useDispatch();\r\n  const { theme } = useSelector((state) => state.settings);\r\n  const btnIcon = theme === 'light' ? 'moon' : 'sun';\r\n\r\n  function handleThemeChange() {\r\n    const newTheme = theme === 'light' ? 'dark' : 'light';\r\n    dispatch(updateSettings({ theme: newTheme }));\r\n  }\r\n\r\n  return (\r\n    <UIIconButton\r\n      icon={btnIcon}\r\n      onClick={handleThemeChange}\r\n      extraClassName=\"theme-toggler\"\r\n    />\r\n  );\r\n};\r\n\r\nexport { ThemeToggler };\r\n","import { useContext } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Localization } from 'contexts';\r\nimport { updateSettings } from 'store/actions';\r\nimport { languages } from 'assets/localization';\r\nimport { UISelect } from 'modules/ui';\r\n\r\nimport './LanguageSelector.scss';\r\n\r\nconst LanguageSelector = () => {\r\n  const dispatch = useDispatch();\r\n  const STR = useContext(Localization);\r\n  const { language: currLang } = useSelector((state) => state.settings);\r\n\r\n  function handleLanguageChange(evt) {\r\n    const language = evt.target.value;\r\n    dispatch(updateSettings({ language }));\r\n  }\r\n\r\n  return (\r\n    <UISelect\r\n      value={currLang}\r\n      onChange={handleLanguageChange}\r\n      options={languages}\r\n      extraClassName=\"language-selector\"\r\n      title={STR.TOGGLE_LANGUAGE}\r\n    />\r\n  );\r\n};\r\n\r\nexport { LanguageSelector };\r\n","import { ThemeToggler, LanguageSelector } from 'modules/settings';\r\nimport './Header.scss';\r\n\r\nconst Header = () => (\r\n  <header className=\"header\">\r\n    <div className=\"header__content wrapper\">\r\n      <span className=\"header__logo\">MyParcels</span>\r\n      <div className=\"header__right\">\r\n        <LanguageSelector />\r\n        <ThemeToggler />\r\n      </div>\r\n    </div>\r\n  </header>\r\n);\r\n\r\nexport { Header };\r\n","import './Main.scss';\r\n\r\ninterface IProps extends React.HTMLAttributes<Element> {}\r\n\r\nconst Main = ({ children }: IProps) => (\r\n  <main className=\"main wrapper\">\r\n    <div className=\"main__content\">{children}</div>\r\n  </main>\r\n);\r\n\r\nexport { Main };\r\n","import './Footer.scss';\r\n\r\nconst Footer = () => (\r\n  <footer className=\"footer\">\r\n    <div className=\"footer__content wrapper\">© 2021, Serhii Tyshchenko</div>\r\n  </footer>\r\n);\r\n\r\nexport { Footer };\r\n","import { Header } from './Header';\r\nimport { Main } from './Main';\r\nimport { Footer } from './Footer';\r\n\r\ninterface IProps extends React.HTMLAttributes<Element> {}\r\n\r\nconst BaseLayout = ({ children }: IProps) => (\r\n  <div className=\"container\">\r\n    <Header />\r\n    <Main>{children}</Main>\r\n    <Footer />\r\n  </div>\r\n);\r\n\r\nexport { BaseLayout };\r\n","/* eslint-disable react/prop-types */\r\n/* eslint-disable react/destructuring-assignment */\r\n/* eslint-disable react/state-in-constructor */\r\nimport React from 'react';\r\n\r\nimport './ErrorBoundary.scss';\r\n\r\nclass ErrorBoundary extends React.Component {\r\n  state = { error: null, errorInfo: null };\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    this.setState({\r\n      error,\r\n      errorInfo,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { errorInfo, error } = this.state;\r\n    if (errorInfo) {\r\n      return (\r\n        <div className=\"error-boundary\">\r\n          <h2 className=\"error-boundary__title\">\r\n            Sorry. Something went wrong :(\r\n          </h2>\r\n          <div className=\"error-boundary__details\">\r\n            <p>\r\n              {error && <strong>{error.toString()}</strong>}\r\n              <br />\r\n              {errorInfo.componentStack}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport { ErrorBoundary };\r\n","import { BaseLayout } from 'modules/layouts';\r\nimport { AddParcelForm, ParcelList } from 'modules/parcels';\r\n\r\nconst Home = () => (\r\n  <BaseLayout>\r\n    <AddParcelForm />\r\n    <ParcelList />\r\n  </BaseLayout>\r\n);\r\n\r\nexport { Home };\r\n","import { useSelector } from 'react-redux';\r\nimport { Home } from 'pages';\r\n\r\nfunction App() {\r\n  const { theme } = useSelector((state) => state.settings);\r\n  document.documentElement.setAttribute('data-theme', theme);\r\n  return <Home />;\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from 'store';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { LocalizationProvider } from 'contexts';\r\nimport App from './App';\r\n\r\nimport 'index.scss';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n      <LocalizationProvider>\r\n        <App />\r\n      </LocalizationProvider>\r\n    </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}